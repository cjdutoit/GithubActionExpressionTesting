name: .Net
on:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - closed
    branches:
    - main
env:
  IS_RELEASE_CANDIDATE: >-
    ${{
      (
        github.event_name == 'pull_request' && 
        startsWith(github.event.pull_request.title, 'RELEASES:') && 
        contains(github.event.pull_request.labels.*.name, 'RELEASES')
      )
      ||
      (
        github.event_name == 'push' && 
        startsWith(github.event.head_commit.message, 'RELEASES:') && 
        startsWith(github.ref_name, 'RELEASE')
      )
    }}
jobs:
  build-windows-latest:
    runs-on: windows-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Configure Git
      run: >-
        git config user.name "GitHub Action"

        git config user.email "action@github.com"
    - name: Extract Version
      run: >-
        $version_number = ((Select-Xml -Path GithubActionExpressionTesting/GithubActionExpressionTesting.csproj -XPath "//Version").Node.InnerXML)

        echo "$version_number"

        echo 'version_number<<EOF' >> $GITHUB_ENV

        echo -e "$version_number" >> $GITHUB_ENV

        echo 'EOF' >> $GITHUB_ENV

        "version_number<<EOF" >> $env:GITHUB_ENV
        "$version_number" >> $env:GITHUB_ENV
        "EOF" >> $env:GITHUB_ENV

        echo "Version - ${{ env.version_number }}"
    - name: Extract Package Release Notes
      run: >-
        $package_release_notes = ((Select-Xml -Path GithubActionExpressionTesting/GithubActionExpressionTesting.csproj -XPath "//PackageReleaseNotes").Node.InnerXML)

        echo "$package_release_notes"

        "package_release_notes<<EOF" >> $env:GITHUB_ENV
        "$package_release_notes" >> $env:GITHUB_ENV
        "EOF" >> $env:GITHUB_ENV

        echo "PackageReleaseNotes - ${{ env.package_release_notes }}"
